【データベースとは】
ある特定の条件に当てはまるデータを複数集めて、
後で使いやすいよう形に整理した情報の塊のこと。（概念的）
紙上で管理する電話帳や住所録もデータベースになる。


・複数のデータをまとめて管理できる
・目的のデータを簡単に探すことができる
・特定の商品が年間いくつ売れたか？など計算、検索、集計が簡単にできる

●データベースの基本機能
・データの検索と更新
・同時実行制御（排他制御ともいう）
・耐障害性
・セキュリティ

●データベースの種類
・階層型
・ネットワーク型
・リレーショナル型（関係）
・No SQL

【階層型】
階層のそうに構成されており、ツリー構造をとる。
１つの親ノードに対して複数の子ノードが「1：N」連なっている構造。
常に１つのルートのみしか存在しないため速度が非常に速い利点がある。
重複登録が必要になるため情報の編集に対して柔軟性が低いデメリットがある。

●ノード
・節点のこと。ツリー構造の結びついた個々の要素を「ノード」と呼ぶ。
　ノード同士をつなぐ線のことは「リンク」と呼ぶ
・グラフデータベース
　ノードとのノード間関連のみからなるデータ構造のこと
　SNSにおける人物関係図など。NoSQLのひとつ。

【ネットワーク型】
　親と子が「ｎ：ｍ」で構成される構造を採用したもの
　今ではあまり使われていない

【リレーショナル型】
　行と列からなる表で表されたデータベース。処理速度が非常に遅い。
　複数の表（テーブル）を関係でつないで分けることができ、
　簡潔にわかりやすく整理できる利点がある。
　
【No SQL】
　リレーショナル以外のデータベースの形式として注目を集めている
　No Only SQL


【RDMS】
●RDB（リレーショナルデータベース）
・RDBが現在使われているデータベースの主流である。
　　データベース＝RDBの認識になりつつある
・ITの用途の多くの拡大により、データ処理における「３つのV」の
　増加に対応できるデータ処理が必要になってきている

【DBMS】（DataBase Management System）
●データベースは抽象的な表現だが、データベース管理の具体的なシステムのこと。
　数万件のデータを一瞬にしてソート順にする作業などはDBMSが担っている。

【RDBMSのメリット】
・データの一貫性
　　データ処理が正常に行われてた場合はその結果が表示され、
　　データの処理が行われない場合は処理の前の状態のままという形になる。
・更新コストの削減
　　データの重複をなくして管理するこｔが可能なので修正や削除などの
　　作業が素早くでき更新コストを削減することができる。
・複雑なデータ検索
　　SQLを使用することにより表を組み合わせるなどし、複雑なデータの
　　検索を容易に行うことができる。
・豊富な運用実績
　　豊富な運用実績があり、ノウハウが蓄積されている。
　　トラブル時の対応など情報量という点で大きなメリットがある。

【デメリット】
●処理速度が遅い
　複雑なデータ処理が可能な分、処理は早いとは言えない
　追加機能で改善できる
●柔軟性が低い
　多種多様なデータへの対応と、非構造化には適していない。
　NoSQLの中には半構造化や補う機能をもったものも出てきている。
●拡張性が低い
　データの一貫性を保つために書き込みは原則１台のメインサーバーからしか
　できないようになっている。
　拡張するためには技術的にも費用的にもコストが発生してしまう。

➡特化したものに比べると劣る程度の認識でよい

【】
・Oracle Database
 My SQL

【WEBシステムの仕組み】
・スタンドアロン
　　物理的に離れた場所からはアクセスできない
　　複数ユーザーによる同時作業ができない
・クライアントサーバ
　　２階構成
　　不特定多が利用する際の管理コストがかかる
・WEB３層
　　業務ロジックを実行するアプリケーションをサーバ側で管理して克服
　　サーバサイドを３層にする
　　（WEBサーバ、アプリケーションサーバ、DBサーバ）

【SQL】
・データベースを操作するための言語。
　DBMS上でデータの追加や操作をPCに命令するための手段のこと。
　基本的に１行ずつ入力して直ちに実行される。
・どのＤＢＭＳのプロダクトであっても基本的には共通の

【CRUD】
●コンピュータソフトウェアがもつ永続性に対する４つの基本性能
Create　生成
Read　　読み取り
Update　更新、変更
Delete　削除　

●SQL言語は大文字、小文字の区別はない。（どちらでもよい）


【トランザクション】
●複数のクエリをまとめたもの
　クエリとはSQLの１つの命令のこと
●更新などは通常複数のクエリを連続して行うことが多い
●ACID特性のより定義される
Atomicity　原子性。データの変更を伴うデータ操作が全部成功か失敗かを保証する仕組み。
Consistencey　一貫性。各オブジェクトに対して整合性制約を付与できる。
　　　　　　　　例えばユーザー登録時に同じユーザーに付与されないようにする。
Isolation　分離性、隔離性、独立性
　　　　　　一連のデータ操作が複数のユーザーから同時に行われたとき、
　　　　　　それぞれの処理が矛盾なく行えることを保証すること。
　　　　　　例えばホテル予約して応じ空き部屋数も応じて変動して重複させない
　　　　　　情報がロックされて予約が完了したらロックふが解除される。
　　　　　　・分離性の厳格性からレベルが定義されている。
　　　　　　　非コミット」読み取り（リードアンコミッテッド）
　　　　　　　コミット再読み込み（リードコミッテッド）
　　　　　　　再読み込み可能読み取り（リピータブルリード）
Durability   持続性。　一連のトランザクション操作を完了し、コミット完了通知を受けた時点で結果が失われない。
　　　　　　　正常時だけでなく異常

●ロックタイムアウト
　複数人が同じデータを利用するん場合ロックすることが可能。
　設定時間が経過した場合にはロールバックされる。

●デッドロック
　以下のトランザクションが同時に実行される場合に発生する。
　　トランザクションXはテーブルAを更新後、テーブルBを更新する。
　　トランザクションYはテーブルBを更新後、テーブルAを更新する。

【テーブル設計 (RDB)】
・原則として、「テーブルは現実世界の概念や集合を表したもの」である
・テーブルはデータを入れる唯一のもので、いい加減にデータを入れてはいけない

【テーブル設計のルール】
・最も上位の概念集合にまとめる
　　テーブル名は「～s」という複数形の名前をつけることができる
・列とは個体の「属性」である
・識別子を割り当てることはデータ管理の基本
　　リレーショナルデータベースでは「主キー」と呼ばれる
　　決して重複してはいけない
　　複数の列をあわせて識別子とすることも可能

●正規化
・データベースで保持するデータの冗長性を排除し、一貫性と効率性を保持するための形式
　冗長性…１つの情報が複数のテーブルに存在して無駄なデータ領域と
　　　　　面倒な更新処理をまとめた

●第１正規形
　１つのセルの中には１つの値しか含んではいけない
　この値を「スカラ値」と呼ぶ。

●関数従属性
・セルに複数の値を許すと、１つの主キーが各種の値をひとつに決められない
・リレーショナルデータベースでの主キーと他の列の間に
　成立する関数的な一意性のことを関数従属性という。

●第２正規形
・部分関数従属性を排除した形のこと
　　主キーを構成する列の一部にだけ関数従属
・第２正規形は可逆的な操作であり、無損失分解が可能である。
　　可逆性➡ここでは正規化する前の状態に戻せること
　　無損失分解➡情報を完全に保存したままテーブルを分割する操作

●第３正規形
・推移的関数従属を排除した形のこと
　　主キー以外のキー同士に発生する関数従属のこと。
・第３正規形も可逆的な操作であり、無損失分解が可能である。

