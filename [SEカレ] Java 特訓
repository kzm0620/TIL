・main は必ず最初に呼び出されるルールがある。
・ln はラインという一行表示して改行せよという意味
・表示➡オプション➡表示➡半角空白、全角空白にチェックをお入れておく
・Javaは膨大なクラスがあるため、あえて長い名前をつけることも多い
　その長い名前の前につける苗字のようなものをパッケージ名とよぶ。
　長いクラス名を書くのは大変なのでインポートで輸入するイメージ。
　インポートすればそれ以降は短い名前だけの部分で使うことができる。
・System.out.printだけの場合は改行しない。

●キャスト（型変換）
int型、double型、char型でキャストを行うプログラム

●javaは実行時のエラー処理が構文で用意されている。エクセプションと呼ぶ。

【繰り返し構文】
●while 先にチェックして繰り返し処理をするので「前判定」
●do-while は処理をしてから繰り返すかを判断する「後判定」
●for 「～の期間を繰り返す」
Javaは配列を作るとき、メモリー上に配列のための領域を新しく確保するという表現がある。(その言語の世界感)
●配列の要素数は、配列名.length で得られる。

【コマンドライン引数】
●String[]args　はコマンドライン引数を受け取る仕掛けのもの。
　➡コマンドラインはコマンドプロンプトで入力する行のこと。
●java 実行するクラス名に続けて、スペースで区切って任意のデータを指定することができる
　➡このことをコマンドラインの引数と呼ぶ。
●mianのString[] は何を入れても文字列扱いとなる。文字列の配列という意味。
　argsアルグズ(アーギュメンツ)

【多重ループ】
●繰り返しの中に繰り返しがある。
●縦の何個目、横の何個目、などの２次元配列で主に使用される。

【拡張for文】
●1次元配列および２次元配列の繰り返しの変数を用意するのが面倒、、その要素を取り出すプログラム。
●端から端まで取り出す場合は拡張for文が楽、特定の範囲を取り出す場合は通常のfor文と使い分ける。

【メソッドの作成】
●プログラムはいくつかの構成に分けて作る、このことをモジュールと呼ぶ。プログラムの大きな部品のイメージ
●処理のまとまりをいくつかのメソッドに分けて、それらが連携して動作するほうが見通しが良い。

●メソッドの作り方
➡public(プログラムの他の部分から利用できるという意味)から書き始める。
　static(静的)このメソッドは最初からメモリ上に存在しますよという意味。
　ststicの後にメソッドの処理結果として返される値を戻り値のデータ型。
　（戻り値がない場合は、無いという意味のvoidを指定する）
　メソッド名は自分で決めれる
●reutrn は⓵戻り値を返す　⓶処理の流れをプログラムに返す

【例外処理】
●javaはあらかじめエラーを表すクラスが用意されている。
　そのクラスの名前でどんなエラーか区別できるようになっている。
　配列の範囲を超えた例外は、
　Array Index Out Of Bounds Exception　というクラスで知らせる。
　それをtryとcathという構文で処理される。
　tryのブロックでエラーが発生する可能性がるブロックを囲う
●引数は２つ指定されたのに、整数に変換できないと、
 Number Format Exception　で知らされる。
●整数が両方指定されたが、argsの数値が０の場合はゼロ除算になってしまう（無限大になってしまう）
 Arithmetic Exception で知らされる
●それ以外の例外が発生した場合は、すべての例外という意味の
 Exception で知らされる。

●例外の表示をExceptionだけにもできる
 (Exception e)などExceptionの後の文字で判断できる。eオブジェクト
　e.getClass().getName()を記述すると何の例外か分かるようになる。
