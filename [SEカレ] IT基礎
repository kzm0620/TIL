●IT
　ITとは情報を取得、加工、保存、伝送するための科学技術。
　動作するPCプログラム（ソフトウェア）を用いて情報を扱う技術のこと。
　似たような言葉に「ICT」というものがある。ほぼ同意義としてもちいられる。
　ただし通信を前提とする諸技術インターネットという意味合いを持たせる場合はある。
　ITを含む包括的な概念としても使われる。

●ITの歴史
　ハードウェア
　１９４５年　ノイマン型コンピュータ
　　２進数、プログラム内蔵方式、逐次処理
　１９４６年　ENIAC
　１９７３年　i8080
　　インテル社8bitMPU

　インターネット
　　１９６９年　ARPNET　→　専用回線網
　　１９８０年代後半　ARPNETとNSFNETが相互接続
　　TCP/IPを使ったネットワーク
　　学術研究用途

●IT業界、企業
　インターネット、WEB系　→　GOOGLEなど
　ソフトウェア系　→　アプリケーションなど
　ハードウェア系　→　PCの周辺機器の開発など
　情報処理系　→　企業のサポート（SIer）、運用保守管理、ソフトウェアの開発など
　その他　→　ドローンなど、ハードウェアと結びついた感じ

●ITエンジニアの職種　
　・SE（システムエンジニア）
　　　システムの設計、開発、テストを行う
　　　ソフトウェア制作の式を監督的な立場で行う
　・プログラマー
　　　設計に基づいてプログラミング作業を行う
　　　プログラミング言語を用いてシステムやソフトウェアを作成
　・サーバーエンジニア
　　　サーバーPCの設計、構築、運用保守を行う
　　　サーバーの利用状況に合わせた設計を行う
　　　必要に応じて復旧作業を行う

　・ネットワークエンジニア
　　　PCネットワークの設計、構築、運用などを行う
　・ITコンサルタント
　　　ITを活用して企業の課題を解決する
　・プロジェクトマネージャー
　　　システム開発等のプロジェクトの総責任者
　　　進行管路を担い、予算、品質、納期に対して責任を負う
　・プロジェクトリーダー
　　　システム開発などのプロジェクトのリーダー
　　　メンバーの取りまとめのなどを行う
　・その他
　　　WEBデザイナー、UIデザイナー等のデザイナー
　　　営業、経理等に間接部門など

●プログラマーの仕事例
　・仕事内容
　　　SEの設計したシステムに対してプログラミング
　・プログラミング
　　　コーディング、社内やチームで使うツールを作成する、テストやバグの修正
　・必要なスキル
　　　プログラミングに関する専門知識と論理性
　　　新しい技術を学び続ける向上心
　　　円滑に作業を進めることができるコミュニケーション能力（報連相）
　　　不備を見つける注意力
　　　最後までやりきる根気

●システムエンジニアの仕事例
　・クライアントとのヒアリング
　　　要求分析➡求めらていること、課題を見つけニーズを分析する
　　　要件定義➡システム全体の概要を明確化する
　・要求に最適な仕様のシステムの大まかな設計
　　　基本設計（外部設計）、詳細設計（内部設計）
　・必要な人員や予算などを導き出し、納期に合わせた進行管理を行う
　・プロジェクトリーダーやプログラムを兼務することもある

　・必要なスキル
　　　クライアントの要求を聞き取るヒアリング能力
　　　詳細なシステム設計をする専門的知識や能力
　　　プログラマーに正確に指示を伝えることができるコミュニケーション能力
　　　進行管理を行うマネジメント力


●システム開発の基礎
企業が抱える課題について解決する「仕組み」をPCを使って実現すること。
課題とは問題という意味だけでなく、新しい事業に参画したいや、
既存の業務を効率化してコストを削減したいなどのビジネス上の目標も含まれる。

PCシステムとは数値計算やデータ処理などを行うシステム、制御システムの名称。
例として売り上げをノートからPCに置き換える、在庫処理の管理など。

●ソフトウェア開発
ソフトウェア開発ライフサイクル
可能な限り最短の期間で、高品質、低コストのソフトウェアの制作を可能にしたプロセスのこと。
ソフトウェアは開発モデル
プロトタイプモデル
　試作品を作り顧客のフィードバックを受けながら開発を進める
　開発、顧客間の認識のずれを無くして開発を進めることができる
アジャイル型開発
　スクラム
スパイラル開発

★ウォーターフォールモデル
　伝統的なソフトウェア開発手法
　順次的なフェーズ（要件定義、設計、実装、検証、保守）で構成される。
　厳格は線形モデルにより、フェーズごとに異なる目標を達成する。
　各フェーズが１００％完了するまで次のフェーズを開発することはできず、
　後戻りしてプロジェクトや方針を変更するプロセスは従来存在していない。
　要は管理しやすい。
　開発を進める上で手戻りは必ず存在すると思ったほうが良い。ただし影響はでかい

★アジャイル型開発
　小単位で実装とテストを繰り返して開発を進めていくこと。
　従来と比べて開発期間が短縮されるためアジャイル（素早い）と呼ばれている。
　・リリース計画
　・イテレーション（反復）…小さな単位に分けられたサイクルを繰り返すこと
　
　多くの手法がある　（リーダーどの手法で実装してきくか決める）
　・スクラム　
　・エクストリーム・プログラミング（XP）
　・ユーザー機能駆動開発（FDD）


●ITエンジニアに必要なスキル
　・ITリテラシー
　　　通信、ネットワーク、セキュリティなど、ITに関するものを理解する能力や、
　　　適切に活用する能力のことを言う。
　・リテラシーとは本来は読み書きの能力を指しているが、最近では特定の分野の知識や
　　理解力を指す。
　・具体的な知識の量と質としてはITリテラシーは最低限必要であり
　　「IPA(情報処理推進機構)」の
　　「基本情報技術危険（FE）」や「応用情報技術試験（AP）」などが求められている。

●プログラミング
　PCに処理させたい計算手順や処理手順を記述すること
　プログラム➡処理手順をPCにわかる言葉で示したもの
　
●アルゴリズム
　問題の解決に導く手順のこと。
　ＰＣにソフトウェア的に効率的に実装するものがコンピュータープログラミングである。
　ただし絶対的、なことはない。柔軟的であることが大事。
　正しく効率的なアルゴリズムで基づいているものでなければならない。
　フローチャートはアルゴリズムの視覚的表現としてよく使われる。

●プログラミング言語の分類
　プログラムに翻訳方法

　・コンパイル方式
　　　プログラミング言語をコンピュータが理解できる言語に変換すること。
　　　➡その工程を行ってくれるソフトウェアのことをコンパイラと呼ぶ。
　
　・インタープリタ方式
　　　ＰＣが理解できる機械語に変換しながら同時に実行していくこと。
　　　➡その工程を行ってくれるソフトウェアのことをインタプリタと呼ぶ。
　　　そのため、コンパイルしなくてもPCはインタプリタ式の言語を理解することができる。
　　　そのプログラムのことをスクリプトと呼ぶことがある。
　
　※一般的にはコンパイル式のほうが早いといわれている
