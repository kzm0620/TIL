●IT
　ITとは情報を取得、加工、保存、伝送するための科学技術。
　動作するPCプログラム（ソフトウェア）を用いて情報を扱う技術のこと。
　似たような言葉に「ICT」というものがある。ほぼ同意義としてもちいられる。
　ただし通信を前提とする諸技術インターネットという意味合いを持たせる場合はある。
　ITを含む包括的な概念としても使われる。

●ITの歴史
　ハードウェア
　１９４５年　ノイマン型コンピュータ
　　２進数、プログラム内蔵方式、逐次処理
　１９４６年　ENIAC
　１９７３年　i8080
　　インテル社8bitMPU

　インターネット
　　１９６９年　ARPNET　→　専用回線網
　　１９８０年代後半　ARPNETとNSFNETが相互接続
　　TCP/IPを使ったネットワーク
　　学術研究用途

●IT業界、企業
　インターネット、WEB系　→　GOOGLEなど
　ソフトウェア系　→　アプリケーションなど
　ハードウェア系　→　PCの周辺機器の開発など
　情報処理系　→　企業のサポート（SIer）、運用保守管理、ソフトウェアの開発など
　その他　→　ドローンなど、ハードウェアと結びついた感じ

●ITエンジニアの職種　
　・SE（システムエンジニア）
　　　システムの設計、開発、テストを行う
　　　ソフトウェア制作の式を監督的な立場で行う
　・プログラマー
　　　設計に基づいてプログラミング作業を行う
　　　プログラミング言語を用いてシステムやソフトウェアを作成
　・サーバーエンジニア
　　　サーバーPCの設計、構築、運用保守を行う
　　　サーバーの利用状況に合わせた設計を行う
　　　必要に応じて復旧作業を行う

　・ネットワークエンジニア
　　　PCネットワークの設計、構築、運用などを行う
　・ITコンサルタント
　　　ITを活用して企業の課題を解決する
　・プロジェクトマネージャー
　　　システム開発等のプロジェクトの総責任者
　　　進行管路を担い、予算、品質、納期に対して責任を負う
　・プロジェクトリーダー
　　　システム開発などのプロジェクトのリーダー
　　　メンバーの取りまとめのなどを行う
　・その他
　　　WEBデザイナー、UIデザイナー等のデザイナー
　　　営業、経理等に間接部門など

●プログラマーの仕事例
　・仕事内容
　　　SEの設計したシステムに対してプログラミング
　・プログラミング
　　　コーディング、社内やチームで使うツールを作成する、テストやバグの修正
　・必要なスキル
　　　プログラミングに関する専門知識と論理性
　　　新しい技術を学び続ける向上心
　　　円滑に作業を進めることができるコミュニケーション能力（報連相）
　　　不備を見つける注意力
　　　最後までやりきる根気

●システムエンジニアの仕事例
　・クライアントとのヒアリング
　　　要求分析➡求めらていること、課題を見つけニーズを分析する
　　　要件定義➡システム全体の概要を明確化する
　・要求に最適な仕様のシステムの大まかな設計
　　　基本設計（外部設計）、詳細設計（内部設計）
　・必要な人員や予算などを導き出し、納期に合わせた進行管理を行う
　・プロジェクトリーダーやプログラムを兼務することもある

　・必要なスキル
　　　クライアントの要求を聞き取るヒアリング能力
　　　詳細なシステム設計をする専門的知識や能力
　　　プログラマーに正確に指示を伝えることができるコミュニケーション能力
　　　進行管理を行うマネジメント力


●システム開発の基礎
企業が抱える課題について解決する「仕組み」をPCを使って実現すること。
課題とは問題という意味だけでなく、新しい事業に参画したいや、
既存の業務を効率化してコストを削減したいなどのビジネス上の目標も含まれる。

PCシステムとは数値計算やデータ処理などを行うシステム、制御システムの名称。
例として売り上げをノートからPCに置き換える、在庫処理の管理など。

●ソフトウェア開発
ソフトウェア開発ライフサイクル
可能な限り最短の期間で、高品質、低コストのソフトウェアの制作を可能にしたプロセスのこと。
ソフトウェアは開発モデル
プロトタイプモデル
　試作品を作り顧客のフィードバックを受けながら開発を進める
　開発、顧客間の認識のずれを無くして開発を進めることができる
アジャイル型開発
　スクラム
スパイラル開発

★ウォーターフォールモデル
　伝統的なソフトウェア開発手法
　順次的なフェーズ（要件定義、設計、実装、検証、保守）で構成される。
　厳格は線形モデルにより、フェーズごとに異なる目標を達成する。
　各フェーズが１００％完了するまで次のフェーズを開発することはできず、
　後戻りしてプロジェクトや方針を変更するプロセスは従来存在していない。
　要は管理しやすい。
　開発を進める上で手戻りは必ず存在すると思ったほうが良い。ただし影響はでかい

★アジャイル型開発
　小単位で実装とテストを繰り返して開発を進めていくこと。
　従来と比べて開発期間が短縮されるためアジャイル（素早い）と呼ばれている。
　・リリース計画
　・イテレーション（反復）…小さな単位に分けられたサイクルを繰り返すこと
　
　多くの手法がある　（リーダーどの手法で実装してきくか決める）
　・スクラム　
　・エクストリーム・プログラミング（XP）
　・ユーザー機能駆動開発（FDD）


●ITエンジニアに必要なスキル⓵
　・ITリテラシー
　　　通信、ネットワーク、セキュリティなど、ITに関するものを理解する能力や、
　　　適切に活用する能力のことを言う。
　・リテラシーとは本来は読み書きの能力を指しているが、最近では特定の分野の知識や
　　理解力を指す。
　・具体的な知識の量と質としてはITリテラシーは最低限必要であり
　　「IPA(情報処理推進機構)」の
　　「基本情報技術危険（FE）」や「応用情報技術試験（AP）」などが求められている。

●プログラミング
　PCに処理させたい計算手順や処理手順を記述すること
　プログラム➡処理手順をPCにわかる言葉で示したもの
　
●アルゴリズム
　問題の解決に導く手順のこと。
　ＰＣにソフトウェア的に効率的に実装するものがコンピュータープログラミングである。
　ただし絶対的、なことはない。柔軟的であることが大事。
　正しく効率的なアルゴリズムで基づいているものでなければならない。
　フローチャートはアルゴリズムの視覚的表現としてよく使われる。

●プログラミング言語の分類
　プログラムに翻訳方法

　・コンパイル方式
　　　プログラミング言語をコンピュータが理解できる言語に変換すること。
　　　➡その工程を行ってくれるソフトウェアのことをコンパイラと呼ぶ。
　
　・インタープリタ方式
　　　ＰＣが理解できる機械語に変換しながら同時に実行していくこと。
　　　➡その工程を行ってくれるソフトウェアのことをインタプリタと呼ぶ。
　　　そのため、コンパイルしなくてもPCはインタプリタ式の言語を理解することができる。
　　　そのプログラムのことをスクリプトと呼ぶことがある。
　
　※一般的にはコンパイル式のほうが早いといわれている


●ITエンジニアに必要なスキル⓶

・開発環境
　ソースコードを書くところからデバッグ、そしてコンパイラをまでを一つのソフトウェアで
　開発するときに総合開発環境（IDE）を使うことが多い。
　Visual Studio Code　エディタだが拡張機能を追加するとIDEのような使い方が可能になる
  Eclipse　主にJavaの開発で利用される
  Xcode　　iOSのアプリ開発でよく利用される

●GIT
　複数のメンバーで開発を行うためのソフトウェアのバージョン管理が必要になる。
　GITを利用することで他人が変更した内容についてもローカル環境で反映することができる。

　・クローン…リモートリポジトリを複製してローカルリポジトリを作るコマンド
　・コミット…ファイルの追加や変更をリモートリポジトリに反映させるコマンド
　・プッシュ…ローカルリポジトリの変更をリモートに反映させるコマンド　
　・マージ…異なるブランチを統合すること
　・プル…リモートをローカルに反映させること
　・フェッチ…リモートで更新された情報をローカルに反映させること

●WEBアプリケーションの開発
　・最近のプログラミングのシステム開発の多くがWEBアプリの開発になっている。
　・今までのようにソフトウェアを個々のPCにインストールのではなく、
　　インターフェースとしてWEBブラウザを利用することでOSの違いやハードウェアの違いなどを
　　考えずにサービスを提供することが可能になる。
　・「WEBサーバー」上で動作している。
　・利用者が操作する画面を作成する「フロントエンド」と、
　　サーバー側の処理を行う「バックエンド」の処理を作成することが必要となる。

●サーバー
　ネットワーク上のPCの中で、他のPC（クライアント）から要求や指示を受け、
　情報や処理結果を返す役割をもつPCやソフトウェアのことをいう。
　このようなPCシステムをクライアントサーバーシステムという。
　サーバを利用することで、WEBページの閲覧やメールの送信などが可能になる。

●サーバーの種類
　・ファイルサーバー➡LANなどのネットワーク上でのファイル管理を主なサービスを提供するPCのこと
　・メールサーバー➡メールの送受信の役割を担うサーバー
　・データベースサーバー➡データベース管理システムが稼働するサーバー
　・WEBサーバー➡WEBシステム上で利用者のPCに対し情報や機能を提供するPCおよびソフトウェアのこと
　・アプリケーションサーバー➡WEBサーバより受け取った情報を処理するためのサーバー

●フロントエンド開発
　・ユーザーが目にしたり操作したりする視覚的な要素のこをフロントエンドよ呼ぶ
　・ユーザーエクスペリエンス（UX）やユーザーインターフェース（UI）のデザインでは
　　WEBサイトの外観や操作性に焦点があてられるのに対し、
　　フロントエンド開発でWEB上でどう表示ｓれるかが重要視される。
　・HTML、CSS、JavaScriptなど

●JavaScriptクロスプラットフォームで動作するオブジェクト指向のスクリプト語で
 webページをインタラクティブに使用される。
　Ajax技術（非同期通信）の登場、HTML５の登場などにより広範囲で使われる言語になってきている。

●バックエンド開発
　サーバーサイド（WEBサーバー側）やデータベースのシステムなど、ユーザーの目に見えない部分のこと。
　Spring Framework (Java)
  Django.Flask (Python)
  Ruby on Rails (Ruby)
  Node.js (JavaScript)

●データベース
　ある特定の条件にあてはまる「データ」を複数を集めて後で使いやすいかたちに整理した情報の塊のこと。

●データべース化のメリット
　・複数のデータをまとめて管理できる
　・目的のデータを簡単に探すことができる
　・グループ分け、検索、集計などが簡単にできる

●データベースの基本機能
　・データの検索と更新（登録、修正、削除）
　・同時実行制制御（同時にアクセスがあったらどうしたらいいか？のこと）
　・耐障害性（データの几帳化、複数の場所にデータを保存する）バックアップ
　・セキュリティ（ユーザーから隠す）

●データベースの種類
　・階層型
　・ネットワーク型
　★リレーショナル型　➡　現在多くのシステムが利用している

★リレーショナル（関係）型データベース
　・「表」であらわされたデータベースである
　・テーブルの列に重複しない項目名が設定され、そこに行としてデータを追加していく。
　・複数の表を結合することができ、より柔軟な処理を実現している。

●RDB（関係データベース、リレーショナルデータベース）
　・RDBが現在の主流である
　・ITの用途の拡大により、データ処理における＃つのVの増加に対応できるデータ処理が必要になってきている。
　・オラクル、MySQL、など

●３つのV
　・Volume　　　データ量の増加
  ・Velocity　　処理速度の増加
  ・Variety　   多様性の増加

●DBMS（Data Base Management System）
　・データベース管理システム
　・データベースという言葉は概念的であるのに対して、DBNSというのは具体的なシステムのこと
　・大量のデータを自動的に整理してくれるというのが最大のメリットである。
　・数万件のデータを一瞬にしてあいうえお順にソートしてくれるなどの機能も担っている

●RDMS（Relational DBMS）のメリット
　・RDBのDBMSのこと
　・データの一貫性、整合性が保たれている、矛盾が生じない保証がされている。　
　・完全に実行、実行しないの処理しかしない仕様のため担保されている。
　・更新コストが削減
　・複雑なデータ検索
　・豊富な運用実績

●主な製品
　・Oracle Database 日本でシェア１位
  ・MySQL
  ・SQL Server　マイクロソフト社が提供

●ＳＱＬ
　・SQLとはデータベースを操作するための言語のことであり、　
　　DBMS上でデータの追加や削除、並べ替えなどを行うようPCに命令するための手段のこと。
　　基本的に１行ずつ入力して確定し、直ちに実行される。

●ネットワーク
　・パソコン、スマホなどの通信端末や各種サーバーの間を有線や無線でつなぎ、
　　情報の伝達を行うための通信設備のことである、機器と回線から構成されている。
　　これを世界でつかなっているのがインターネット。
　・現在ではTCP/IPというルールに従って通信が行われている。

●TCP/IP
　ネットワークにおいて世界基準に利用されている通信プロトコル（通信規則）のこと。
　１層目…ネットワークインターフェース層
　２層目…インターネット層
　３層目…トランスポート層
　４層目…アプリケーション層　　の４層構造になっている。


●サーバーレス
　・サーバーを意識せずにシステムを構築、運用することを指す
　　クラウドサービスを提供している企業にやってもらう
　　レンタルサーバーを提供している企業も増えてきている。

●ITトレンドの変遷

●DX
　・企業がAI、Iot、ビッグデータなどのデジタル技術を用いて、業務フローの改善や
　　新たなビジネスモデルの創出だけでなく、レガシーシステムからの脱却や企業風土の変革を
　　実現させることを意味する。
　・２０２５年の崖

●RPA（Robotic Process Automation）
　・プログラムが書けなくても作業（事務）の自動化ができるソフトのこと。
　・便利だが、簡単に取り扱えるものではない。

●AI（人口知能）の現在
　・人口知能（人間のうなもの）はまだできていない　
　・よく人口知能搭載商品という商品が多く出回っているが、、
　　実際はセンサなどからの入力と決められた出力の組み合わせ程度（エージェント）
　・単純な制御プログラム
　・古典的な人口知能
　・機械学習などを取り入れた人口知能
　・第３次AIブームになっている
  ・機械学習（Machine Learning）の中に深層学習（Deep Learninng）がある。
　・データの種類による分類
　・問題の解決による分類

●機械学習の手法（アルゴリズム）
　・決定木
　・ランダムフォレスト
　・ロジスティック回帰
　・サポートベクターマシン（ＳＶＭ）
　・ｋ近傍法
　・ｋ平均法
　・ニュートラルネットワーク

●Chat GPT
　・大規模な自然言語処理モデル（LLM : Large Language Model）
　　➡大規模なテキストデータ(何百億)を事前に学習し、わずか数列のタスクを与えただけで、
　　　様々な言語処理タスクを実行できる言語モデルのことです。
　・大量のデータを学習しているので、入力された内容に対して人間のような回答が生成される。
　・自己教師ありという機会学習の方式が採用されている。
　　➡自己教師あり学習とは、教師ラベル（データの正解を示す情報）の無いデータを用いて
　　　データ自身から独自のラベルを下記的に作り、それを予測する事前学習タスクを解くこと。
　　　そのため、人間からラベルを用意する必要がなく、大量のデータを手間をかけずに
　　　学習させることが可能です。

　　　さらに人間からのフィードバックをもとに強化学習を使うことで、
　　　人間にとってより好ましい出力をするようにアップデートされている。

●Iotとは
　・あらゆる物をインターネットに結びつけること。
　・センサ等を利用して小さなデータを大量に取得
　・上記で取得したビッグデータを利用、分析することにより関連性や法則性を発見
　　したりすることが可能になっている。

●暗号資産（暗号通貨）
　・紙幣や硬貨のような実態がなく、インターネット上でやり取りされる電子データのこと。
　・交換媒体として機能するよう設計されたデジタル資産のことであり、個々のコインの
　　所有権の記録はＰＣ化されたデータベースという形の台帳に保存され、
　　強力な暗号によって取引履歴の安全性は保障され、新たなコイン生成がコントロールされ
　　所有権の移転が確認されるものである。



●ブロックチェーン
　・暗号技術を使ってリンクされたブロックと呼ばれるレコードの増大するリストである。
　　各ブロックには、前のブロックの暗号化ハッシュ、タイムスタンプ、トランザクションデータ
　　トランザクションデータ（一般的にはマークルツリーで表される）が含まれている。
　・設計上、ブロックチェーンはデータの改革に強とされている。
　・ブロックチェーンは「２つの当事者間の取引を効率的かつ検証可能で恒久的な方法で
　　記録することができるオープンな分散型台帳」であるといわれている。


●WEB 3.0
　・２０１４年にイーサリアムの共同創設者であるギャビン・ウッド氏が提唱したもの。
　・ブロックチェーン技術の活用によって訪れる新しいインターネットの時代を象徴する
　　言葉だが、定義は愛網である。
　・WEB 3.0に含まれる技術やシステムとして、仮想通貨（暗号資産）やNFT、DAOなどがある。
　・NFT（非代替性トークン）美術館の絵画に認められているような代替不可能な価値を
　　ブロックチェーン技術によって付加かれたデータのこと。
　・DAO（Decentralized Autonomous Organization 分散型自立組織）
　　管理者がいなくても運営が」成立するシステム
