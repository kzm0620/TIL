【SEカレッジ　Java　名刺管理アプリ】

●　データベースをアクセスするWEBアプリをJavaで作成する。

１、JavaでWEBアプリを作るた目のツールをインストール方法
２、総合開発環境Eclipsの使い方
３、Eclipsのプロジェクトの作成と構成
４、WEBアプリに必要なファイルの種類
５、WEBアプリに作成手順

SQL　データベースの作成や操作を行う言語
JDBC JAVAプログラムからデータベースへアクセスを行うためのAPI
JSP WEBアプリの制御役となるプログラム
EL JSPの中にデータを読み込むための言語

●　MVCモデル
Javaを使ったWEBアプリはMVCモデルという形で作られる
JDBC使ってデータベースへアクセスを行う
SQLでデータベースアクセルの命令を返す

V (view) 
JSPとして作成する　
JSPのなかで　EL　と　JSTL　を使う。
見た目はHTMLだがServletに変換されてから実行される。

c (controller)
Servletとして作成する。
HttpServeletクラスに変換してから実行される。

●　オブジェクト指向プログラミング
・あらかじめ用意されているオブジェクトを使用すればよい
・データベースアクセスするためのDAOおよびDTOはデータベースに合わせ自分で作成する必要がある。
・Servletはあらかじめ用意されているHttpServletクラスを継承して、容易に作成できる。
doGetメソッドおよび、doPostメソッドをオーバーライドしてリクエストの処理を記述する。
・Sevletで行う処理は、requestオブジェクトやresponceオブジェクトを使って行う。
これらのオブジェクトはdoGet doPostメソッドの引数として渡される。
・データベースアクセスは、JDBCが提供するオブジェクトを使って行う。
・オブジェクトは。カプセル化されている。
細かいことは気にせず目的の必要な機能だけ知っていればOK

●　プログラマとデザイナの分業
・JSPは見た目がHTMLであり、実用的なWEBデザインはデザイナーが作るもの
・JSPはServletに変換されて実行されてから実行されるもの


１、ツールとインストール方法
・7-zip 圧縮、解凍ソフト　Pleiades All Oneの解凍に使う
・Pleiades All One
Javaの総合開発環境のEclipceや、WEBアプリサーバーのTomcatなどをセットにした開発パッケージ。
・H２　Database Engine
Javaで記述された軽量のDBMS。

●　Eclipseの設定
・設定のことをパースペクティブと呼び、Java EE　に設定する。（画面右上が　JavaEEになっていればOK）
・テキストエディタのフォントサイズを設定する。（初期はかなり小さめのため）
・文字コードをUTF-8に設定（確認）する。
・

●プロジェクトの作成
・プロジェクトには、いくつかの種類があり、WEBアプリは動的WEBプロジェクトとして作成する。
・プロジェクトで使用するWEBアプリサーバーを選択する。
これによってプロジェクトのプログラムをWEBアプリサーバーで実行できるようになる。
TomCat9(Java11)

●　プロジェクトの構成
Src....JAVAのプログラムを格納する
WebContent....HTMLファイルを格納する
WEB-INF.....このフォルダ以下は



●　H2用JDBCドライバとJSTLの組み込み
・H2のJDBCドライバと、JSTlをプロジェクトに組み込んでプログラムから利用できるようにする。

●　名刺管理アプリの機能
機能　…


●　名刺管理アプリの動作確認
EclipseのプロジェクトエクスポローラーでLoginServlet.jabaを右クリックして、
表示されたメニューから実行→サーバーで実行→完了→動作確認ができる
TomCaat9 を右クリックして必ず停止すること。

●　アプリを構成するファイル
・DTO　（Data　Transfer　Object）データを渡すために使うクラス。Java Beansで形式で作成する。
・DAO　(Data　Accese　Object)データアクセスに関する機能を持つオブジェクト
・DTOとDAOのテストプログラム
・DAOをテストする他のコンソールアプリ


●　DAOで使用する主なJDBCのAPI
・java.sqlDriverManagerクラス　DBMSを管理する
・java.sql.Connectionクラスインターフェイス　DBMSto接続と切断を行う
・Java.sql.PreparedStatementクラス　DBMSから

●　サーブレットの仕組み
・URLマッピング（クライアントがWEBブラウザのURL欄に指定する名前）
デフォルトは(”/MyServlet")
・HttpServletクラスを継承する
→クライアントからのgetリクエストに対する処理を記述する。
→クライアントからのpostリクエストに対する処理を記述する。

●　JSPの仕組み
・HTMLじゃなないよというJSPであることをを示す
・"c"というプレフィクスでJSTLのタグを使うことを示す

●　フォワード、リダレクト、スコープ
フォワード...サーバー側でServletからJSPに処理の流れを進める
リダイレクト...サーバーがクラアントに別のWEBページを切り替える指示を返す
スコープ...WEBアプリを構成するServletやJSpの間でデータを受け渡す仕組み
リクエストスコープ　リクエストに対するレスポンスが返されるまで使える（今だけ使うか）
セッションスコープ　ログアウトまたはWEBブラウザを閉じるまで使える（ずっと使いたいか）

※上記の機能はあらかじめ用意されているオブジェクトで実現できる。
　　　オブジェクトの中身を知る必要はない。使い方だけ知っていればいい。これがオブジェクト指向。

●　WEBアプリの作成手順
・データベースを作成し、テスト用のデータを登録する
・Eclipseアプリのプロジェクトを作成
・データベースの操作に関わるJavaプログラムを作成してテストする
・ログインなどのWEbページごとおにServletと





