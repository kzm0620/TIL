●真偽値とは
　　true（正） と false(誤) の２つしか存在しない　（どちらも"は付けない）
　 真偽値のデータ型はboolean型

 boolean型の変数定義
　　　　boolean  bool = true
  　データ型　　　　変数名　　　　　　値

●比較演算子
　　X == y　　　　X　と　Y　が等しいとき　true
 X == y　　　　X　と　Y　が等しくないとき　false

 X != y　　　　X　と　Y　が等しくないとき　true
 X != y　　　　X　と　Y　が等しいとき false

●真偽値を出力する
　　System.out.println(treu);
 System.out.println(false);
 System.out.println(6 + 2 == 5); ....... false
 System.out.println(6 + 2 != 5); ....... true

●大小比較
　　X < Y   Yのほうが大きいとき true
 X <= Y  Yのほうが大きいまたは等しいとき　true
 X > Y　　　　　　Yのほうが小さいとき　true
 X >= Y  Yのほうが小さいときまたは等しいとき true

 4 + 2 > 6 ...... false
 4 + 2 >= 6 ..... true
 8 / 4 < 2 ...... false
 8 / 4 <= 2 ..... true

●論理演算子は、「かつ」、「または」、「~でない」　を表現する記号

●「かつ」　は　　&& で表現し、「条件１　＆＆　条件２」は
　　「条件１がtrueかつ条件２もtrue」であれば結果もtrueとなり、
　　どちらか一方でもfalseであれば結果はｆalseになる。

　X > 10 && X < 30　  Xが５のとき　false、　Xが２０のとき　true 

●「または」　は　||　で表現し、「条件１または条件２のどちらか一方でもtrue」
　　であれば結果はtrueとなる。

　　X < 10 || X > 30  Xが５のとき　true、　Xが２０のとき　false

●「~でない」　は　！　を用いると表現できる。
　　例えば　！（X >= 30）　は　「Xが３０以上でない　（つまり３０より小さい）　ときtrue
　　「Xが３０以上」　のとき　fale　になる

　　Xが２０のとき　　　　　　X >=　３０　....false   !(X >= 30) .... true

●条件分岐　
　　特定の状況のときだけある処理を行うこと。

●if文　
　　もっとも多く使う条件分岐。if文の（）に条件を入れ、｛｝に処理を書く。

　if （条件式）　｛　
　　　　　　処理；
　｝

●if文を使ってみる
　　int X = 10;
 if (X == 10) {
  System.out.println("Xは１０です")
　　}
⬇コンソール
条件式がtrueの為、Xは１０です　と表示される

●ブロック
　　if文の｛｝の部分ををブロックと呼ぶ。
　　　条件がtrueのときに行う処理をブロックを使ってまとめている。

　　int X = 20;
 if (X < 30) {
    System.out.println("条件式はtrue");
    System.out.println("Xは３０より小さい");
 }
⬇　コンソールの出力
条件はtrue   Xは３０より小さい

●　else　
　　英語でその他という意味。
　　ifとelseを組み合わせると「もし~なら〇〇、そうでなければ△△」　
　　という条件分岐が可能になる。

　●else　if
 　「もし~なら、〇〇、そうでなくてもし✖✖なら△△、
　　　　どちらでもない場合は□□」　　という条件分岐を実現できる。
　　 elsseifは必要なだけ並べることができが、複数の条件に合致しても
　　　　実行されるのは最初に合致した条件だけなので注意する。

　　　　int X = 40
  if (X >= 30) {
    System.out.println("Xは３０以上") ......これが実行される。
　　　　} elseif (X > 20) {
    System.out.println("Xは20より大きく、３０より小さい")...実行されない
  } else {
    System.out.println("Xは２０以下")
  }
