【セキュリティ】
●阿部ひろきさん　ホワイトハッカー

【攻撃者の目的と手口】
●ネットワークサービスの普及により生まれる問題
　・ネットワークの依存が拡大
　　情報ソース
　　社会的関係
　・双方のデー通信➡送信デバイスの安全性、通信経路の安全性　
　・ネットワーク上でのデータ蓄積➡送信されるデータの安全性と信頼性

【セキュリティとは】
●情報の「機密性」と「完全性」と「可用性」を維持すること　ISO/IEC 27000(JIS Q 27000)

【セキュリティの三大要件（CIA）】
●機密性　　Confidentislity　➡　「鍵」鍵がないと開けることができない
●完全性　　Integrity　　　　➡　「中身」中身が入れ替えられない
●可用性　　Availability　　➡　「鍵の持ち主」鍵を持った人が開けることができる
※一つでも欠けたら意味がなくなってしまう


【攻撃者側の目的】
●前は自分の能力を誇示」するためだった➡ハクティビスト、サーバーテロ
●組織のシステム内に保管されている情報を盗みだす➡産業スパイ、諜報組織

➡ネットワークサービルのへんかによって変化
●エンドユーザーに被害を与えて利益を得ようとする➡単なる犯罪者

【攻撃特定性】
●攻撃者がターゲットを選別する理由
●攻撃者の行動を推測するためにも重要
　高い➡そのターゲットを攻撃するしか意味がない
　低い➡攻撃できればどこでもいい
　　・多くは動機に依存する（⓵怨恨、⓶金銭、⓷娯楽）


●攻撃性の高い攻撃におけるハッキングフェーズ

[事前準備]
偵察　　　　　　公開されている情報を中心に取集する(OSINT)と呼ばれる
スキャニング　　　　　
列挙　　　　　　攻撃の可否を判断する
---------------------------
[攻撃]
アクセス権の取得　サーバーにアクセスして制御を行う
権限昇格　　　　　サーバーの管理者権限を奪う（一番重要）
---------------------------
[事後処理]　　　
アクセスの維持　　サーバに自由にアクセスできるようにする
痕跡の消去　　　　バックドアやマルウェアを隠蔽し後からの追跡を困難にする　

●攻撃特性の高い攻撃はインサイダー(内部犯罪)のである可能性が高い

【手口】
●スプーフィング　偽装、だます
　・攻撃元を偽装して特定を困難にする
　・攻撃の効果をより高めるため
IPアドレス  (技術的)　➡　攻撃者のIPアドレスを偽装する、効率的な攻撃(DoS)
MACアドレス (技術的)  ➡　攻撃するシステムの設定を変更する、攻撃パケットを書き換える
ARP        (技術的)  ➡　
メール      (心理的)  ➡
DNS　      (心理的)   ➡　

【ヒューマンエンジニアリング】
●セキュリティを構成する要素の最大の弱点　➡　「人」
　➡不安、疲れ、悩み、などコンディションによってパフォーマンスが変化する
●ユーザーをだますスプーフィング
　・Emotet等マルウェアの添付➡メールスプーフィング(URLが正しいものであるかを確認する)
　・フィッシング➡DNSスプーフィング(対象のドメインのDNSサーバを調べる)
　　　　　　　　　Nslokupコマンドで自分のDNSと対象のDNSの結果を比較する


●リスク増大の要因
・ネットワークによるサービスの普及
・エンドユーザーの多様化
・端末の多様化

●動的なサービスの必要性
・ユーザーに合わせて表示する内容を変える
・リアルタイムに情報を更新する
・端末に応じて表示内容やデザインを変える
　➡ユーザーからの入力をパラメーとして利用　
　　エンドポイントの技術を利用　JavaScriptなど　
　　様々な形式による情報の送信 XML.SOAP.JSONなど

●構造的な問題
　・HTTPというプロトコル（デザインが古い、セッションの維持と暗号化ができない）
　　➡カバーするために「アプリケーションが実装」するしかない
　　　開発者の技術が脆弱性だとすぐ攻撃される
　　　フレームワーク等による効率化（フレームでガードできる）
　　　Struts(Java)に代表される脆弱性の問題

●WEB代表的な攻撃　クライアントに影響をあたえるもの
　・認証クラッキング
　　パスワードクラッキング
　セッションハイジャック
　SQLインジェクションｎ
　パスワードリマインダーの脆弱性

ＷＥＢアプリケーションには認証攻撃に塚荒れやす

●アカウントを特定できる脆弱性
　・昔からアカウントの特定に使用される脆弱性
　　適切なエラーメッセージによって有効なユーザーアカウントが列挙される問題

　・アカウントに一意性が必要
　　　パスワードがユーザーによって変更できる
　　　アカウント(ログインID)に一意性が必要　
　　　同じアカウントを登録させてはいけない
　　　※システムを直すには非常に難しいが、
　　　　メースアドレスで登録するようにすれば改善できる。

　・安易な多段階認証
　　　アカウント入力とパスワード入力を段階で分けている場合
　　　アカウント入力時にアカウントの存在有無で次のページを変えると特定できる

　・なりすまし攻撃
　　　セッションハイジャック
　　　　ネットワーク盗聴
　　　　XSS攻撃
　　　　セッション固定攻撃
　　　　セッションIDの推測

●WEBアプリケーションの攻撃の特徴
　リクエストの文字れ宇の中に攻撃インジェクションが挿入される　
　リクエストを監視すれば攻撃が判定できる
　それを行うのがＷＡＦであるが根本的な解決にいはならない（リスクの軽減）
　リスクの除去はアプリケーションの脆弱性を取り除くしかない

●XSSはサニタイズでは万全ではない
　・サニタイズ➡HTMLソースの中で意味のある記号を置き換える処理
　　　　　　　　文字列をエンコードに変換


【マルウェア】
●クライアントPCへの外部からの攻撃は難しい➡公開されているサービスがない

●マルウェア感染手法
・ファイル添付、ダウンロード、直接インストール、公開されているサービスの脆弱性

●対応策
　・添付ファイル➡ユーザーが「何か」しない限りは何も起きない
　・ダウンロード


●攻撃監視
　監視対象　侵入検知アラート
　　　　　　パケット監視（一番効率がよい）

●ログ
　アクセスログ
　　アプリケーション攻撃の基本はリクエストへ攻撃文字列を挿入
　　GETメソッドの場合は引数になりアクセスログに残る


