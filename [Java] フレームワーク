【フレームワークとは】
●フレームワークとはWEBサイトや、WEBアプリケーションなどを作るときに　
　よく使う機能を提供するソフトウエアのこと。
　アプリケーションフレームワークとも呼ばれている。
　有名なフレームワークは基本的にオープンソースで無料で使える
　フレームワークはプログラミング言語ごとにいくつか種類がある。
●開発を効率化できる
●プログラムの書き方を統一しやすい
●エラーを解析しやすい

●フレームワーク無しで開発する場合
　➡開発のルールなどゼロから全て自分で作らないといけない…


【代表的なフレームワーク】
●Java　
・Spring Framework　機能が豊富であらゆるタイプのアプリやソフトウエアの開発ができる
・Play Framwork　　　機能が絞られるが使いやすい、WEBサイトとアプリ開発に特化
・JSF　　　　　　　　画面が作りやうい、開発とデザインチームに分かれて開発しやすい、MVCモデルに基づく
・Spark Framework　シンプルな構成かつ軽量で迅速な開発に向いている。小～中規模開発向け
・Apache Struts　　MVCモデルの基づいたFW、2001年に登場した歴史の古いFW、脆弱性あり

●Java Script
・React 　 WEBアプリ作成に便利　これによりWEBサイトからWEBアプリが作成できるようになった
・jQuery　 FWではなくライブラリ。Java Scriptを楽に作成できるため用いられる

●Pythn
・Django  WEBaaaアプリ開発に実用的
・Flask 　マイクロフレームワークと呼ばれインストール時の機能が最小限
　　　　　必要な機能を自分で取り入れる必要があるがその分動作が軽いフレームワーク

●PHP
・Laravel　WEB職人のためのフレームワークでWEB開発に特化。


【Spring Framework】
●Spring Frameworkに必要な環境をつくる　
●Spring Framework用のプロジェクトを作る
●Spring Framework用のプロジェクトでアプリを開発する

【Spring Frameworkできること】
●クラウドアプリ開発➡サーバーを自分で用意する必要がない。　
　　　　　　　　　　　Microsoft社のクラウド環境「Azure」のアプリが開発できる。
●WEBアプリ開発➡基本的になんでも開発できる。
　　　　　　　　　開発、リリース、更新修正がしやすい

【Spring Frameworkのメリット】
⓵プログラムの変更がしやすい
　➡DIというプログラムが変更しやすい仕組みがあり、設定を外部ファイルに保存できる
⓶プログラムの拡張性が高い
　➡メソッドを指定してインターフェースから呼び出せる、後から自分で追加もできる
⓷プログラムの保守が簡単
　➡「AOP」という保守が簡単になる機能が備わっている
　　(同じようなとこで使う処理を１つ作り使い回してできる仕組み)
⓸簡単にテストできる
　➡「Spring Test」で簡単にテストの作成ができる
　　「JUnit」とも連携し、テスト実行や確認もしやすい
　　(Javaプログラムのテストを行うフレームワーク)


【Spring Frameworkの導入に必要なもの】
⓵JDK　
　➡Javaのプログラムを動かすときに必要なもの
⓶Maven
　➡Javaプログラムをビルド(実行するための準備)するためのツール
⓷Spring Tool Suite(STS)
　➡Spring Frameworkで開発するための統合開発環境

●以上の３つをすべてインストール
●Eclips　(Javaで有名な統合開発環境の１つ)
　➡これをベースにSpring Frameworkを利用できるよう変更したものがSpring Tool Suite(STS)。

