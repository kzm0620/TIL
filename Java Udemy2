●APIとは
Application Program InterfaceとはJAVAが提供してくれている便利なソースコード群のこと。
printlnメソッドもこのAPIで定義されているものになる。
JAVAの開発環境には必ず必要である。

・APIはパッケージと呼ばれるフォルダのようなもので管理されている。
・APIは基本的に使用したいクラスをインポートすることで使用可能になる。
　インポート方法は
　（クラスブロックの外側で）import　パッケージ名.クラス名
・APIの中でも java.langパッケージで管理されているクラス群は、
　その利用頻度があまりにも高いためにインポート不要で使用可能になっている。

●Array List
・要素数を自由に変更できる配列のようなもの
　➡ List<型> 変数名 = new ArrayList<型>();
・提供されている主な機能
  get(インデックス)...インデックスに該当すデータを参照
  add(データ)...ArrayListにデータを追加する。追加された順に０からインデックスが振られる
  size()...  ArrayListの要素数を求める
  isEmpty()...リストに要素がない場合trueを返す
  remove(インデックス)...インデックスに該当するデータを削除

・ArrayListはjava.untilパッケージに管理されているAPIであるため
　使用時はインポートする必要がある。
　Java.until.Listもインポートしなければならない点に注意。
・配列同様に同じ型の要素を扱うが、参照型しか扱えない点が大きく違う。
　プリミティブ型のデータで扱いたい場合は対応するラッパーくクラスを型として
　指定しなければならない。

●パッケージ
・複数のクラスをグループ化するためのもの。
　すべてのJavaプログラムは必ず何かしらのパッケージに属している。
　パッケージで管理されていあにファイルはソースコードして認められない。
・それぞれのソースコードの先頭で「パッケージ宣言」することで、そのクラス所属する
　パッケージを定義することができる。
　➡ package パッケージ名；
・必ず同じ名前のフォルダで管理されなければならない。
　パッケージ＝フォルダの認識で大丈夫
・パッケージ宣言で指定するパッケージ名はCLASSPATHからの相対パスとなる。
　
　CLASSPATHは環境変数の１つで、Java実行のアクセス先としてPC上における
　Javaのクラスやパッケージの格納場所を管理する。


●宣言不要のパッケージ
・実行ファイルが存在するフォルダ(カレントディレクトリ)を自動的にパッケージとして扱われる。
　これを「無名のパッケージと呼ぶ」
・無名のパッケージに格納されているファイルは全てpackage宣言が不要。


●パッケージとインポートの要否
・同じパッケージ内であればインポート宣言なしで他のクラスを利用することができる(インポート不要)
・パッケージ外のクラスを利用する場合はインポート宣言が必要になる。
　(APIのjava.langパッケージを除く)

●
