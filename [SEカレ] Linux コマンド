【Linuxの操作の基本】
●LinuxのUI（ユーザーインターフェース）
　基本はCUI画面からのコマンド操作

【端末(コンソール)とシェル】
●コンソールから入力されたコマンドはシェルが受け取る
●シェルはコマンドをカーネルに伝える
●シェルは数種あり、ユーザーごとに変更可能

●Linuxの起動　
　・電源を入れるとブートローダーが起動する
　・ブートローダーから起動するOSを選択可能
　・主なブートローダーにGRUB、LILOなどがある

●Linuxの終了
　・shutoutコマンド　
　・haltコマンド
　・intコマンド
　・GUI環境の場合はメニューから「シャットダウン」

【ファイルとディレクトリ】
・Linuxのディレクトリは「/(ルート)」を頂点としたツリー構造
・ドライブという概念はない
・ファイルはディレクトリ内に格納される
・ディレクトリの区切りも「/」で表す

【ヘルプ】
・コマンドの仕様方法の説明を表示
・コマンドの後にスペースを空け、「--help」と入力

【マニュアル】
・コマンドの前に「man」と入力し、スペースを空けてコマンドを入力する
・passwdなど、複数のセクションに登録されているものはセクション番号を入力(省略可)
・基本的な操作はlessコマンドと同じ
  スペース：１画面進む  
  エンター：１行進む  
  d：半画面進む
　b：１画面戻る
  u：半画面戻る
  y：１行戻る
  q：終了

【ファイル操作系のコマンド】

●pwd  (プリントワーキングディレクトリ)
　・記述例 pwd [-L,P.--vertion (不可の場合もあり)]
　・カレントディレクトリを表示する
　・-Lで論理的なカレントディレクトリ、
　　-Pで物理的なカレントディレクトリを表示(シンボリックリンクを仕様の場合など)

●ls
　・記述例 ls [-a,i,l...][ファイル名]
　・ファイルやディレクトリの情報を表示
　・ファイル名を省略するとディレクトリ内のファイルリストを表示
　・「-i」でファイル番号（i-node番号）を表示
　・「-l」でリスト表示、「-a」ですべての(隠しファイルも)表示
　・オプション多数

【ファイル操作系のコマンド】

●cd　（カレントディレクトリ）
　・記述例　cd 移動先のデレクトリ
　・カレントディレクトリの変更
　・特徴的なディレクトリの指定
   [/]　ルートディレクトリ
   [~]　ユーザーのホームディレクトリ
   [.]　現在のディレクトリ
   [..]　１階層上位のディレクトリ
   
●mkdir　（メイク）
　・記述例　mkdir [-m,p....] ディレクトリ名
　・ディレクトリの作成
　・「-m」でモード(アクセス権)を設定して作成、
　　「-p」でサブディレクトリごと作成

●cp　（コピー）
　・記述例　cp [-b,f,a....] コピー元 コピー先
　・ファイル、ディレクトリのコピー
　・「-b」でバックアップをとってコピー、
　　「-f」で同名ファイルがあってもコピー、
　　「-a」で属性やディレクトリ構造を維持してコピー
　・オプション多数

●mv　（ムーブ）
　・記述例　mv [-b,-f....] 移動先 移動元
　・ファイルやディレクトリの移動、名前の変更
　・「-b」でバックアップをとって移動、
　　「-f]」で移動先に同名ファイルがあっても移動

●cat 　（連結）ファイルの中身を見るので使用する人もいる
　・記述例　cat [-n...] ファイル１ ファイル２
　・複数のファイルを連結して表示するのみ
　・ファイルを１つだけ指定すると内容を表示
　・「-n」で行番号の付加

●less　（ファイルの中身を見る）
　・記述例　less ファイル名
　・テキストファイルの内容を閲覧
　・操作
　　　スペース：１画面進む
     b：１画面戻る
     d：半画面進む
     u：半画面戻る
     エンター：１行進む
     y：１行戻る
     q：終了

●touch （ファイルの作成や最終更新日の変更など）
　・記述例　touch [-a,m,c....] ファイル名
　・ファイルのタイムスタンプを変更する
　・ファイルが存在しない場合は空ファイルを作る
　・「-a」でアクセス時刻のみ
　・「-m」で修正時刻のみ変更
　・「-c」でファイルが存在しない場合でも作成しない

●rm　（削除）
　・記述例　rm [-d,R....] 　ファイル名
　・ファイル、ディレクトリを削除
　・「-d」でディレクトリを削除(管理者のみ可)
　・「-R」でディレクトリとその内部のファイル、サブでディレクトリを再帰的に削除

●grep　
　・記述例　grep [-iv....] パターン [ファイル名]
　・パターンにマッチする文字列をファイル等から検索し、該当する行を表示
　・「-i」で大文字、小文字の区別をしない
　・「-v」でマッチしない行を表示など
　・検索パターンには正規表現を用いる
　・正規表現
    .　任意の１文字
   ＾　行の先頭
   *　直前の１文字の０回以上のくり返し
   $　行の末尾
   []　かっこ内の任意の文字に一致、^は否定
   +　直前の文字の１回以上の繰り返し
   ?　直前の文字の０または１文字マッチ 
　　　パターン１｜パターン２　パターン１またはパターン２にマッチ
　　　(パターン)　パターンのグループ化
   ￥ 正規表現に使われる文字をそのまま文字として扱う

●find 
　・記述例　find [-follow...] 検索場所 [判別式、アクション]
　・ファイルやディレクトリ」を検索
　・「-follow」はシンボリックリンクの参照先を検索
　・検索場所はディレクトリで指定、指定されたディレクトリより下位の階層が対象となる　
　・判別式
    -atime n　　最終アクセスがｎ日前
    -mtime n　　最終変更がｎ日前
    -name       ファイル名 ファイル名で検索、ワイルドカード可能 
    -type　　　タイプ タイプを指定、[f]はファイル、[d]はディレクトリ、[l]はシンボリックリンク
    -not　　　　判別式の前に挿入すると否定
　・アクション
    -exec　　コマンド。検索後、コマンドを実行
    -print   結果を表示(標準出力)
    -fprint  ファイル。結果をファイルに書き出す。同名ファイルがあれば上書き

【管理系のコマンド】

●su
　・記述例　su [-....] ユーザー
　・ユーザーの切り替え
　・「-」を付けるとログインシェルを使って切り替える(環境も切り替わる)
　・パスワードの入力が必要

●whoami
　・記述例　whoami
　・現在のユーザーアカウントを表示
　・似たコマンドに「who」、「w」等がある

●id [-ngG...]
　・記述例　 id
　・ユーザーidや、グループidを表示する
　・「-n」でid(番号)ではなくユーザー名を表示(-g,-uまたは-Gの指定も必要)

●useradd
　・記述例　useradd [-cコメント][-dディレクトリ][-e有効期限][-G所属グループ]ユーザ名
　・ユーザーを追加する
　・[-c]でコメント追加、[-d]でホームディレクトリの指定、[-e]で有効期限の指定
　　[-G]で所属グループを指定(複数可)
　・ユーザーは/etc/passwordファイルに追加される
　・管理者権限が必要

●passeword
　・記述例　password[ユーザ名]
　・パスワードを設定するコマンド
　・ユーザー名を指定しないと自分のパスワードの設定
　・他のユーザーのパスワードを設定するには管理者権限が必要

●groupadd
　・記述例　groupadd [-g グループid] グループ名
　・グループを作成する
　・-gでグループid(番号)を指定可
　・グループは /etc/groupファイルに追加される

●chmod　（チェンジモード）
　・記述例　chmod [-cvR] モード(パーミッション) 　ファイル(ディレクトリ)
　・ファイル、ディレクトリのアクセス権を設定するコマンド
　・[-c.v]でアクセス権が変更されたファイルを詳細に表示
　　[-R]でディレクトリとその中身のファイルを再帰的に変更
　・所有者以上の権限が必要
　・モード(パーミッション)

➡モードの指定(記号)
 u...所有者
 g...所有グループ
 o...その他
 +...権限の付与
 -...権限の削除
 =...権限を指定
 r...読み取り
 w...書き込み
 x...実行

例　text1ファイルの所有者に書き込み権を与える chmod u+w test

　textファイルの所有者にすべての権限、所有グループに読み取り実行、
　その他のユーザーに読み取り権を設定する chmod u=rwx, g=rx, o=r, test

●モードの指定(数字)
　・モードを３桁の８進数で表現
　・１桁目は所有者、２桁目はグループ、３桁目はその他のユーザー
　・アクセス権を２進数で表記したとき、１桁目は[r]、２桁目は[w]、３桁目は[r]

例　textファイルの所有者にすべての権限、所有グループに読み取りと実行、
         所有者     所有グループ　　その他
         r w x       r - x        r - -
 ２進数  1 1 1        1 0 1        1 0 0
 ８進数    7            5            4
　　その他のユーザーに読み取り権を設定する　chmod 754 test

●chown
　・記述例　chown [-cvR] ユーザー名 [.:][グループ名] ファイル(ディレクトリ)名
　・ファイル、ディレクトリの所有者を変更する
　・[-c.v]でアクセス権が変更されたファイルを詳細に表示
　　[-R]でディレクトリとその中身のファイルを再帰的に変更
　・所有グループも変更する場合は[.]か[:]で続けて記述
　・ファイル(ディレクトリ)名には正規表現も可

●chgrp
　・記述例　chgrp [-cvR] グループ名(id) ファイル(ディレクトリ)名
　・ファイル、ディレクトリの所有グループを変更する
　・[-c.v]でアクセス権が変更されたファイルを詳細に表示
　　[-R]でディレクトリとその中身のファイルを再帰的に変更
　・所有者以上の権限が必要
　・ファイル(ディレクトリ)名には正規表現の可

●shutdown
　・記述例　shutdown [-rh...][now,hh:mm+数値][メッセージ]
　・システムをシャットダウンする
　・[-r]でリブート、[-h]でシャットダウン
　・[now]ですぐにシャットダウン、時刻指定は[hh:mm]形式で指定
　　現在時刻より指定時間経過後は[+]で指定(単位は分)
　・メッセージを指定すると全ユーザーに送信される
　・管理者権限が必要

【ネットワーク系のコマンド】

●ifconfig
　・記述例　ifconfig インターフェース [-a,up,down][設定]
　・ネットワークインターフェースの状態表示、起動、停止、設定
　・[-a]ですべてのインターフェースを表示、[up]は起動、[down]は停止
　・設定ではアドレスなどの設定が可能

●ping
　・記述例　ping [-qrv][-c 回数][-i 秒][-s パケットサイズ] ホスト
　・指定したホストとの通信可否の確認　
　・[-q]は開始時、終了時のみ情報表示、
　　[-r]はルータを経由しないで接続(直接接続できないとエラー)
　　[-v]は追加情報の表示
　・[-i]は送信間隔を指定
　　[-s]はパケットサイズの指定(デフォルトは56バイトにヘッダ8バイトの合計64バイト)

●traceroute
 ・記述例　traceroute [-Fmn....] ホスト
　・指定したホストまでの経路を調べる
　・[-F]でパケット分割不可、[-m]最大数で経由するマシンの上限を指定
　　[-n]で名前解決せず、IPアドレスで結果を表示

【知っていると便利なコマンド】
●grepの応用
　・複数の文字列を指定して検索する(OR検索)[-e][|]を使う
　　　grep -e "apple" -e "banana" fruits.txt
     grep "apple￥bnana" fruits.txt (|の前に￥(バックスラッシュ)が必要)

　・複数の文字列を指定して検索する(AND検索)
　　AND検索の場合は複数のgrepを｜でつなぐ
　　　grep "apple" fruits.txt | grep "banana"

　・他コマンドと合わせて使う
　　アクセスログを解析し、index.htmlへのアクセス数をカウントする
　　　grep "index.html" / var/log/httpd/access.log|wc -|

　・システムの複数のログファイルからエラー部分を抽出する
　   cat errolog1.log error2.log | grep "error"

●findの応用
　・-execによるコマンドの実行 '{}' ￥;　
　　'{}'がfindによる検索結果と置き換えられる
　　最後の;は￥(バックスラッシュ)でエスケープする
　　最後を￥;ではなく+にすると検索結果を１つづつ処理せず、一括処理

　・カレントディレクトリにある所有者がrootのファイルのパーミッションを確認する
　　 find. -maxdepth 1 -user root -exec ls | '{}' +

　・カレントディレクトリにある所有者がuser１のシンボリックリンクをすべて削除する
     find. -maxdepth 1 -user user1 -tepe | -exec rm '{}' +

●AND検索とOR検索
　・-o(-or)と-a
　　￥(と￥)で検索条件のグループを指定する
　　￥(と￥)内の条件は-oですなぐ(OR条件)
　　-aでつなぐとANDの意味
　・所有者がrootかuser1のファイルを探す
　　　find. -maxdepth 1 ￥(user root -o -user user1 ￥)
　・他のコマンドを検索条件に使う
　　　自分が所有者となっていふるファイルを検索
      find. -maxdepth 1 -user $(whoami)
